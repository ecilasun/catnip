// GrimR language test file

word loword;
byteptr VRAM;

// GrimR: Function input parameters support type aliasing, therefore one can pass a byte array as a dword array into a function.
/*byte sprite[] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x00, 0xF6, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x51 };

def DrawRect(word posX, word posY, word width, word height)
{   // GrimR: Input parameters are pulled from stack into autogenerated function-local variables

    // GrimR: Current default behavior for all variables is 'static'
    word spanX, spanY;

    spanY = posY;
    while (spanY<posY+height)
    {
        spanX = posX;
        while (spanX<posX+width)
        {
            word offset;
            offset = (spanX + spanY*320) | (0x8000<<16);
            VRAM[offset] = sprite[(spanX%16) + (spanY%8)*16];
            spanX = spanX+1;
        }
        spanY = spanY+1;
    }
    return;
}*/

def main()
{
    // GrimR: Any expression can be used as input parameter to function call
    //DrawRect(16,16,16,16);

    // 256x192 8bpp at 0x80000000
    loword = 0;
    while (loword < 0x1000)
    {
        VRAM[(0x8000<<16) | loword] = 0xFF;
        loword = loword + 1;
    }

    return;
}
