/*  GrimR language test file
    The purpose of this module is to act as a sample
    which tries to show as many language features as possible
*/

byteptr VRAM = 0x80000000;
byteptr BORDERCOLOR = 0x8000C000;
byteptr VBSENABLE = 0x8000C001;
dwordptr VBLANKSERVICE = 0x8000C004;
word bcolor = 0;

word spritelist[] = {
    // Wall
    0x0000, 0x0000, 0x0006,
    0x0000, 0x0010, 0x0006,
    0x0000, 0x0020, 0x0006,
    0x0000, 0x0030, 0x0006,
    0x0000, 0x0040, 0x0006,
    0x0000, 0x0050, 0x0006,
    0x0000, 0x0060, 0x0006,
    0x0000, 0x0070, 0x0006,
    0x0000, 0x0080, 0x0006,
    0x0000, 0x0090, 0x0006,
    0x0000, 0x00A0, 0x0006,
    0x0000, 0x00B0, 0x0006,
    0x0000, 0x00C0, 0x0006,
    0x0000, 0x00D0, 0x0006,
    0x0000, 0x00E0, 0x0006,
    0x0000, 0x00F0, 0x0006,
    // Wall
    0x0010, 0x0000, 0x0006,
    0x0010, 0x0010, 0x0006,
    0x0010, 0x0020, 0x0006,
    0x0010, 0x0030, 0x0006,
    0x0010, 0x0040, 0x0006,
    0x0010, 0x0050, 0x0006,
    0x0010, 0x0060, 0x0006,
    0x0010, 0x0070, 0x0006,
    0x0010, 0x0080, 0x0006,
    0x0010, 0x0090, 0x0006,
    0x0010, 0x00A0, 0x0006,
    0x0010, 0x00B0, 0x0006,
    0x0010, 0x00C0, 0x0006,
    0x0010, 0x00D0, 0x0006,
    0x0010, 0x00E0, 0x0006,
    0x0010, 0x00F0, 0x0006,
    // Wall
    0x0020, 0x0000, 0x0006,
    0x0020, 0x0010, 0x0006,
    0x0020, 0x0020, 0x0006,
    0x0020, 0x0030, 0x0006,
    0x0020, 0x0040, 0x0006,
    0x0020, 0x0050, 0x0006,
    0x0020, 0x0060, 0x0006,
    0x0020, 0x0070, 0x0006,
    0x0020, 0x0080, 0x0006,
    0x0020, 0x0090, 0x0006,
    0x0020, 0x00A0, 0x0006,
    0x0020, 0x00B0, 0x0006,
    0x0020, 0x00C0, 0x0006,
    0x0020, 0x00D0, 0x0006,
    0x0020, 0x00E0, 0x0006,
    0x0020, 0x00F0, 0x0006,
    // Wall
    0x0030, 0x0000, 0x0006,
    0x0030, 0x0010, 0x0006,
    0x0030, 0x0020, 0x0006,
    0x0030, 0x0030, 0x0006,
    0x0030, 0x0040, 0x0006,
    0x0030, 0x0050, 0x0006,
    0x0030, 0x0060, 0x0006,
    0x0030, 0x0070, 0x0006,
    0x0030, 0x0080, 0x0006,
    0x0030, 0x0090, 0x0006,
    0x0030, 0x00A0, 0x0006,
    0x0030, 0x00B0, 0x0006,
    0x0030, 0x00C0, 0x0006,
    0x0030, 0x00D0, 0x0006,
    0x0030, 0x00E0, 0x0006,
    0x0030, 0x00F0, 0x0006,
    // Wall
    0x0040, 0x0000, 0x0006,
    0x0040, 0x0010, 0x0006,
    0x0040, 0x0020, 0x0006,
    0x0040, 0x0030, 0x0006,
    0x0040, 0x0040, 0x0006,
    0x0040, 0x0050, 0x0006,
    0x0040, 0x0060, 0x0006,
    0x0040, 0x0070, 0x0006,
    0x0040, 0x0080, 0x0006,
    0x0040, 0x0090, 0x0006,
    0x0040, 0x00A0, 0x0006,
    0x0040, 0x00B0, 0x0006,
    0x0040, 0x00C0, 0x0006,
    0x0040, 0x00D0, 0x0006,
    0x0040, 0x00E0, 0x0006,
    0x0040, 0x00F0, 0x0006,
    // Wall
    0x0050, 0x0000, 0x0006,
    0x0050, 0x0010, 0x0006,
    0x0050, 0x0020, 0x0006,
    0x0050, 0x0030, 0x0006,
    0x0050, 0x0040, 0x0006,
    0x0050, 0x0050, 0x0006,
    0x0050, 0x0060, 0x0006,
    0x0050, 0x0070, 0x0006,
    0x0050, 0x0080, 0x0006,
    0x0050, 0x0090, 0x0006,
    0x0050, 0x00A0, 0x0006,
    0x0050, 0x00B0, 0x0006,
    0x0050, 0x00C0, 0x0006,
    0x0050, 0x00D0, 0x0006,
    0x0050, 0x00E0, 0x0006,
    0x0050, 0x00F0, 0x0006,
    // Wall
    0x0060, 0x0000, 0x0006,
    0x0060, 0x0010, 0x0006,
    0x0060, 0x0020, 0x0006,
    0x0060, 0x0030, 0x0006,
    0x0060, 0x0040, 0x0006,
    0x0060, 0x0050, 0x0006,
    0x0060, 0x0060, 0x0006,
    0x0060, 0x0070, 0x0006,
    0x0060, 0x0080, 0x0006,
    0x0060, 0x0090, 0x0006,
    0x0060, 0x00A0, 0x0006,
    0x0060, 0x00B0, 0x0006,
    0x0060, 0x00C0, 0x0006,
    0x0060, 0x00D0, 0x0006,
    0x0060, 0x00E0, 0x0006,
    0x0060, 0x00F0, 0x0006,
    // Wall
    0x0070, 0x0000, 0x0006,
    0x0070, 0x0010, 0x0006,
    0x0070, 0x0020, 0x0006,
    0x0070, 0x0030, 0x0006,
    0x0070, 0x0040, 0x0006,
    0x0070, 0x0050, 0x0006,
    0x0070, 0x0060, 0x0006,
    0x0070, 0x0070, 0x0006,
    0x0070, 0x0080, 0x0006,
    0x0070, 0x0090, 0x0006,
    0x0070, 0x00A0, 0x0006,
    0x0070, 0x00B0, 0x0006,
    0x0070, 0x00C0, 0x0006,
    0x0070, 0x00D0, 0x0006,
    0x0070, 0x00E0, 0x0006,
    0x0070, 0x00F0, 0x0006,
    // Wall
    0x0080, 0x0000, 0x0006,
    0x0080, 0x0010, 0x0006,
    0x0080, 0x0020, 0x0006,
    0x0080, 0x0030, 0x0006,
    0x0080, 0x0040, 0x0006,
    0x0080, 0x0050, 0x0006,
    0x0080, 0x0060, 0x0006,
    0x0080, 0x0070, 0x0006,
    0x0080, 0x0080, 0x0006,
    0x0080, 0x0090, 0x0006,
    0x0080, 0x00A0, 0x0006,
    0x0080, 0x00B0, 0x0006,
    0x0080, 0x00C0, 0x0006,
    0x0080, 0x00D0, 0x0006,
    0x0080, 0x00E0, 0x0006,
    0x0080, 0x00F0, 0x0006,
    // Wall
    0x0090, 0x0000, 0x0006,
    0x0090, 0x0010, 0x0006,
    0x0090, 0x0020, 0x0006,
    0x0090, 0x0030, 0x0006,
    0x0090, 0x0040, 0x0006,
    0x0090, 0x0050, 0x0006,
    0x0090, 0x0060, 0x0006,
    0x0090, 0x0070, 0x0006,
    0x0090, 0x0080, 0x0006,
    0x0090, 0x0090, 0x0006,
    0x0090, 0x00A0, 0x0006,
    0x0090, 0x00B0, 0x0006,
    0x0090, 0x00C0, 0x0006,
    0x0090, 0x00D0, 0x0006,
    0x0090, 0x00E0, 0x0006,
    0x0090, 0x00F0, 0x0006,
    // Wall
    0x00A0, 0x0000, 0x0006,
    0x00A0, 0x0010, 0x0006,
    0x00A0, 0x0020, 0x0006,
    0x00A0, 0x0030, 0x0006,
    0x00A0, 0x0040, 0x0006,
    0x00A0, 0x0050, 0x0006,
    0x00A0, 0x0060, 0x0006,
    0x00A0, 0x0070, 0x0006,
    0x00A0, 0x0080, 0x0006,
    0x00A0, 0x0090, 0x0006,
    0x00A0, 0x00A0, 0x0006,
    0x00A0, 0x00B0, 0x0006,
    0x00A0, 0x00C0, 0x0006,
    0x00A0, 0x00D0, 0x0006,
    0x00A0, 0x00E0, 0x0006,
    0x00A0, 0x00F0, 0x0006,
    // Wall
    0x00B0, 0x0000, 0x0006,
    0x00B0, 0x0010, 0x0006,
    0x00B0, 0x0020, 0x0006,
    0x00B0, 0x0030, 0x0006,
    0x00B0, 0x0040, 0x0006,
    0x00B0, 0x0050, 0x0006,
    0x00B0, 0x0060, 0x0006,
    0x00B0, 0x0070, 0x0006,
    0x00B0, 0x0080, 0x0006,
    0x00B0, 0x0090, 0x0006,
    0x00B0, 0x00A0, 0x0006,
    0x00B0, 0x00B0, 0x0006,
    0x00B0, 0x00C0, 0x0006,
    0x00B0, 0x00D0, 0x0006,
    0x00B0, 0x00E0, 0x0006,
    0x00B0, 0x00F0, 0x0006,
    // Computer desk
    0x0000, 0x0000, 0x0000,
    0x0010, 0x0000, 0x0001,
    0x0000, 0x0010, 0x0002,
    0x0010, 0x0010, 0x0003,
    // Potted plant
    0x001A, 0x0015, 0x0004,
    0x002A, 0x0015, 0x0005,
    // Character
    0x000F, 0x0025, 0x0007,
    0x001F, 0x0025, 0x0008
};

byte mysprites[] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x00, 0xF6, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x51, 
    0xFF, 0xFF, 0x01, 0x00, 0x51, 0x51, 0x72, 0x72, 0x51, 0x51, 0x51, 0x51, 0x47, 0x51, 0x51, 0x51, 
    0xFF, 0x01, 0x6F, 0x66, 0x49, 0x49, 0x49, 0x49, 0x49, 0x9A, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 
    0xFF, 0x01, 0x6F, 0x6F, 0x66, 0x6F, 0x6F, 0x6F, 0x49, 0x9A, 0x49, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 
    0xFF, 0x01, 0x6F, 0x6F, 0x6F, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x6F, 0x6F, 
    0xFF, 0x01, 0x66, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 
    0xFF, 0x01, 0x6F, 0x66, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x66, 0x66, 0x66, 0x66, 
    0xFF, 0x01, 0x6F, 0x6F, 0x6F, 0x66, 0x66, 0x66, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 
    0xFF, 0x01, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 
    0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
    0xFF, 0xFF, 0xFF, 0x00, 0x52, 0x48, 0x48, 0x48, 0x48, 0x48, 0x48, 0x48, 0x48, 0x48, 0x48, 0x48, 
    0xFF, 0xFF, 0xFF, 0x00, 0x52, 0x48, 0x52, 0x52, 0x52, 0x52, 0x52, 0x52, 0x52, 0x52, 0x52, 0x52, 
    0xFF, 0xFF, 0xFF, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x52, 0x00, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 
    0xFF, 0xFF, 0xFF, 0x00, 0x52, 0x00, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 
    0xFF, 0xFF, 0xFF, 0x00, 0x52, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xAC, 0x9B, 0x9B, 0x9B, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xAC, 0xAC, 0xAC, 0x9B, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xAC, 0xAC, 0xAC, 0xAC, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xAC, 0xAC, 0xAC, 0xAC, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF6, 0xF6, 0xF6, 0xF6, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x9B, 0x9B, 0x9B, 0x9B, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xAC, 0x9B, 0x9B, 0x47, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9B, 0x9B, 0x9B, 0x9B, 0x00, 0x01, 0x01, 0xFF, 0xFF, 
    0x6F, 0x6F, 0x66, 0x6F, 0x6F, 0x6F, 0x48, 0xAC, 0x9B, 0xAC, 0x9B, 0x48, 0x6F, 0x66, 0x01, 0xFF, 
    0x6F, 0x6F, 0x6F, 0x66, 0x66, 0x6F, 0x48, 0x9B, 0x9B, 0xAC, 0x9B, 0x48, 0x6F, 0x6F, 0x01, 0xFF, 
    0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x48, 0x9B, 0x9B, 0xAC, 0x9B, 0x48, 0x6F, 0x6F, 0x01, 0xFF, 
    0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x48, 0x48, 0x48, 0x48, 0x48, 0x48, 0x6F, 0x66, 0x01, 0xFF, 
    0x6F, 0x6F, 0x6F, 0x6F, 0x66, 0x66, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x66, 0x01, 0xFF, 
    0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x01, 0xFF, 
    0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0xFF, 
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xA4, 0xFF, 
    0x48, 0x48, 0x48, 0x48, 0x52, 0x9B, 0x9B, 0x9B, 0x9B, 0x9B, 0x9B, 0x52, 0x00, 0xA4, 0xA4, 0xFF, 
    0x52, 0x52, 0x52, 0x48, 0x52, 0x52, 0x52, 0x48, 0x48, 0x52, 0x52, 0x52, 0x00, 0xA4, 0xA4, 0xFF, 
    0x00, 0x00, 0x00, 0x00, 0x52, 0x9B, 0x9B, 0x9B, 0x9B, 0x9B, 0x9B, 0x52, 0x00, 0xA4, 0xA4, 0xFF, 
    0xA4, 0xA4, 0xA4, 0x00, 0x52, 0x52, 0x52, 0x48, 0x48, 0x52, 0x52, 0x52, 0x00, 0xA4, 0xA4, 0xFF, 
    0xA4, 0xA4, 0xA4, 0x00, 0x52, 0x9B, 0x9B, 0x9B, 0x9B, 0x9B, 0x9B, 0x52, 0x00, 0xA4, 0xA4, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0xA4, 0xA4, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xA4, 0xA4, 0xA4, 0xA4, 0x00, 0x00, 0x00, 0xA4, 0xA4, 0xFF, 
    0xFF, 0x08, 0x08, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0x08, 0x72, 0x72, 0x08, 0x08, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x08, 0x08, 0x08, 0xFF, 0xFF, 0xFF, 
    0x08, 0x72, 0x7C, 0x7C, 0x72, 0x08, 0xFF, 0xFF, 0xFF, 0x08, 0x7C, 0x7C, 0x72, 0x08, 0xFF, 0xFF, 
    0x08, 0x61, 0x72, 0x72, 0x72, 0x61, 0x08, 0xFF, 0x08, 0x72, 0x7C, 0x7C, 0x72, 0x72, 0x08, 0xFF, 
    0xFF, 0x08, 0x72, 0x72, 0x72, 0x72, 0x61, 0x08, 0x61, 0x72, 0x72, 0x72, 0x72, 0x61, 0x08, 0xFF, 
    0xFF, 0x08, 0x61, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x61, 0x08, 0xFF, 0xFF, 
    0xFF, 0xFF, 0x08, 0x61, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x61, 0x08, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x08, 0x08, 0x61, 0x72, 0x61, 0x61, 0x08, 0x08, 0x08, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x08, 0x61, 0x61, 0x08, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0x01, 0x01, 0x01, 0x08, 0x61, 0x61, 0x08, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0x01, 0x5D, 0x67, 0x67, 0x67, 0x61, 0x61, 0x67, 0x67, 0x67, 0x5D, 0x01, 0xFF, 0xFF, 0xFF, 
    0xFF, 0x01, 0xB7, 0x14, 0x14, 0x14, 0x61, 0x61, 0x14, 0x14, 0x14, 0x67, 0x01, 0xFF, 0xFF, 0xFF, 
    0xFF, 0x01, 0xB7, 0x14, 0x52, 0x52, 0x61, 0x61, 0x52, 0x52, 0x14, 0x67, 0x01, 0xFF, 0xFF, 0xFF, 
    0xFF, 0x01, 0xB7, 0x14, 0x52, 0x52, 0x52, 0x52, 0x52, 0x52, 0x14, 0x67, 0x01, 0xFF, 0xFF, 0xFF, 
    0xFF, 0x01, 0x67, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0xB7, 0x67, 0x01, 0xFF, 0xFF, 0xFF, 
    0xFF, 0x01, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x01, 0xFF, 0xFF, 0xFF, 
    0xFF, 0x01, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x01, 0xFF, 0xFF, 0xFF, 
    0xFF, 0x01, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x01, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x01, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x01, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x6F, 0x6F, 0x6F, 0x6F, 0x54, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x54, 0x6F, 0x6F, 0x6F, 0x6F, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x6F, 0x6F, 0x6F, 0x6F, 0x54, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x54, 0x6F, 0x6F, 0x6F, 0x6F, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 
    0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x6F, 0x5D, 0x5D, 0x5D, 0x5D, 

    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0B, 0x13, 0x53, 0x0B, 0x13, 0xF6, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x13, 0x4E, 0x4E, 0x06, 0x6E, 0x0E, 0x04, 0xEE, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x09, 0x4E, 0x0E, 0x4E, 0x4E, 0x67, 0x7F, 0xFE, 0x0B, 0xAE, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x13, 0x04, 0x97, 0x4E, 0x4E, 0x01, 0x09, 0x13, 0x53, 0x00, 0x09, 0xEE, 0xFF, 
    0xFF, 0xFF, 0x13, 0x04, 0x4E, 0x8F, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 
    0xFF, 0xFF, 0x00, 0xF7, 0x00, 0x09, 0x00, 0x56, 0x00, 0x16, 0x00, 0x0C, 0xAC, 0xEE, 0xAC, 0xF6, 
    0xFF, 0x13, 0xAE, 0x26, 0xAE, 0x00, 0x16, 0xF7, 0x00, 0xEF, 0x00, 0xAE, 0x6E, 0x24, 0xF7, 0xFF, 
    0xFF, 0x01, 0xEF, 0x09, 0xFE, 0x00, 0x01, 0xFE, 0xA4, 0xFE, 0x64, 0xF7, 0xAE, 0x6E, 0x64, 0xF6, 
    0xFF, 0x01, 0x0B, 0x27, 0xFE, 0x00, 0xA4, 0xFE, 0x13, 0xAF, 0xAF, 0xAF, 0xAF, 0xEF, 0x14, 0x6E, 
    0xFF, 0x64, 0x00, 0x0B, 0xF7, 0x03, 0xFE, 0x13, 0x00, 0x03, 0x0B, 0x0B, 0x0B, 0x0B, 0x54, 0xF7, 
    0xFF, 0xFF, 0x63, 0x00, 0x27, 0x16, 0xF7, 0x0B, 0x14, 0x00, 0x00, 0x00, 0x00, 0x09, 0xF6, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xA3, 0x09, 0x0C, 0x16, 0x16, 0x26, 0x0B, 0x00, 0x53, 0x63, 0xF6, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xAE, 0x03, 0x8E, 0x16, 0x51, 0x13, 0x6C, 0xA1, 0xEC, 0xFE, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x00, 0x56, 0x0B, 0x0F, 0xA0, 0xEC, 0xFC, 0xFC, 0xA3, 0xE4, 0xF6, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x01, 0x6E, 0x6C, 0x6E, 0x11, 0xFE, 0xFE, 0xF3, 0xFE, 0x91, 0xEC, 0xFF, 0xFF, 

    0xFF, 0xFF, 0xFF, 0x0B, 0xFE, 0xFE, 0xF6, 0x0B, 0xF6, 0xF6, 0xF4, 0xFE, 0x89, 0xEC, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x03, 0xFE, 0xFE, 0x03, 0xE9, 0xA1, 0x88, 0xAB, 0xE9, 0x93, 0xF6, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x24, 0xB6, 0xF7, 0x13, 0x63, 0x51, 0x49, 0x50, 0x93, 0xF6, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x14, 0x14, 0x14, 0x11, 0x0B, 0x13, 0x64, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x13, 0x09, 0x0B, 0x6E, 0x00, 0x6C, 0x00, 0xAC, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x09, 0x09, 0x49, 0x11, 0x09, 0x11, 0x09, 0x09, 0xEE, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };

def vblank()
{
    return;
}

def main()
{
    word frame = 0;
    word posX = 128, dirX = 1;
    word posY = 64, dirY = 1;

    // Set up vblank service function address
    VBLANKSERVICE = &vblank;
    // Enable vblank service
    VBSENABLE[0] = 1;

    // Sample uses only one sprite sheet, so we set it once
    spritesheet(&mysprites);

    // No return
    while(1)
    {
        // If we're filling the whole screen there's no need for a CLF
        //clf(0xEC+frame);

        // Set border color
        BORDERCOLOR[0] = bcolor;

        // Handle bouncing sprite
        posX = posX + dirX;
        posY = posY + dirY;

        if (posY > 169 || posY < 1)
        {
            dirY = -dirY;
            // Change border color on collision
            bcolor = ++bcolor;
        }

        if (posX > 240 || posX < 1)
        {
            dirX = -dirX;
            // Change border color on collision
            bcolor = ++bcolor;
        }

        // The last two sprites are our character
        // Update its position with the bounce position
        spritelist[0x4A4+0] = posY;
        spritelist[0x4A4+2] = posX;
        spritelist[0x4AA+0] = posY+16;
        spritelist[0x4AA+2] = posX;

        // Draw all sprites in the list
        //sprite(&spritelist, 0x2); //12*99, 0x2
        sprite(&spritelist, 0xC8);

        // Advance frame counter, wait for vsync
        frame = ++frame;
        vsync();

        // Swap frames to reveal what we've drawn so far
        // while simultaneously selecting the other frame for write
        fsel(frame);
    }

    // In case the emulator or the hardware falls through the infinite loop, this will trap and revert back to boot code.
    return;
}
