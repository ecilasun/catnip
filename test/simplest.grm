// GrimR language test file

word loword;
byteptr VRAM = 0x0;

byte sprite[] = {
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
    0xFF, 0xFF, 0xFF, 0x00, 0xF6, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x9A, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x00, 
    0xFF, 0xFF, 0xFF, 0x00, 0x9A, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x51, 0x51 };

def TileSprite(word posX, word posY, word width, word height)
{   // GrimR: Input parameters are pulled from stack into autogenerated function-local variables

    // GrimR: Current default behavior for all variables is 'static'
    word spanX, spanY;

    spanY = posY;
    while (spanY<posY+height)
    {
        spanX = posX;
        while (spanX<posX+width)
        {
            VRAM[(0x8000<<16) | (spanX + spanY*256)] = sprite[(spanY%16)*16+(spanX%16)];
            spanX = spanX+1;
        }
        spanY = spanY+1;
    }
    return;
}

def main()
{
    // GrimR: Any expression can be used as input parameter to function call
    TileSprite(32,48,16,16);
    TileSprite(96,64,16,16);
    TileSprite(131,131,96,48);

    return;
}
